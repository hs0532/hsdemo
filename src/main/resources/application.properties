#端口号
server.port=7001

spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://101.200.169.63:3306/demo_db?characterEncoding=utf8&serverTimezone=UTC&useSSL=false
spring.datasource.username =root

spring.datasource.password =Aa1010...

##########Druid连接池配置
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20

# 获取数据库连接等待的超时时间
spring.datasource.maxWait=60000

# 配置多久进行一次检测，检测需要关闭的空闲连接 单位毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000

#配置连接在池中的最小生存时间
spring.datasource.minEvictableIdleTimeMillis=300000

#系统启动时通过该sql语句验证数据库是否可用，如果不配置validationQuery，则下面三项无效
spring.datasource.validationQuery=SELECT 1 FROM DUAL
#启用空闲连接检测，以便回收
spring.datasource.testWhileIdle=true
#从连接池获取连接时，是否检测连接可用性，开启性能会有些许影响
spring.datasource.testOnBorrow=false
#释放连接到连接池时，是否检测连接可用性，开启性能会有些许影响
spring.datasource.testOnReturn=false

#PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=false
spring.datasource.maxPoolPreparedStatementPerConnectionSize=0

#监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall  'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
# MyBatis config
mybatis.config-location=classpath:/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/dmsMapper/*.xml